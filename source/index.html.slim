.hero.text-align-center
  = partial 'shared/fork_me_on_github'
  .container
    = image_tag 'itcsscli.svg', class: 'hero__logo'
    h3.hero__phrase Manage your ITCSS structure from command line.
    .showyourterms.js-syt
      .command data-action='command' itcss new comp buttons
      .green data-action='line' data-delay='0' create source/assets/stylesheets/components/_components.buttons.sass
      .blue data-action='line' data-delay='8000' update source/assets/stylesheets/application.sass

.section
  .container
    h3.section__title Why?
    p.section__paragraph We love ITCSS. But it can be hard to grow fluidly.
    .text-align-center
      p.section__paragraph “While writing I felt I spent much more time moving and<br> organizing the CSS than I would normally do...”
      h4.section__subtitle Anders Grendstadbakk,
      span.section__paragraph trying ITCSS for the first time.
    p.section__paragraph Creating new modules and importing them takes a precious time and ends up you wishing they come in a single package. But this would go against one of the best CSS practices:
    h4.section__subtitle Import only what you really uses
    p.section__paragraph That's why itcsscli were created. So you can create ITCSS modules, install inuitcss files independently and import it all into your sass base file automatically without breaking your workflow abruptly.

    h3.section__title Installation
    p.section__paragraph itcsscli is a very simple and small RubyGem. To install it on your computer must have ruby and then install the gem from your terminal:
    .showyourterms
      .command gem install itcsscli
    p.section__paragraph If this command fails, you can force it prepending `sudo`.

    h3.section__title Setting up
    p.section__paragraph You can setup itcsscli interactively:
    .showyourterms.js-syt
      .command data-action='command' itcss init
      .yellow data-action='line' Well done! Let`s configure your itcss.yml:
      .grey data-action='line' Provide the root folder name where the ITCSS file structure should be built:
      .command data-action='command' source/assets/stylesheets
      .grey data-action='line' What is the name of your base sass file (all ITCSS modules will be imported into it):
      .command data-action='command' application
      .grey data-action='line' Are you using a package manager? [ y / n ]
      .command data-action='command' y
      .grey data-action='line' Choose your package manager [ bower / npm ]:
      .command data-action='command' bower
      .green data-action='line' data-delay='8000' itcss.yml successfully created!

    h3.section__title Usage
    p.section__paragraph Now that everything seems to be configured, you can run itcss commands from the root of your project:
    .showyourterms.js-syt
      .command data-action='command' itcss new comp buttons
      .green data-action='line' data-delay='0' create source/assets/stylesheets/components/_components.buttons.sass
      .blue data-action='line' data-delay='8000' update source/assets/stylesheets/application.sass
    .showyourterms.js-syt
      .command data-action='command' itcss new tr helpers
      .green data-action='line' data-delay='0' create source/assets/stylesheets/helpers/_helpers.buttons.sass
      .blue data-action='line' data-delay='8000' update source/assets/stylesheets/application.sass
    .showyourterms.js-syt
      .command data-action='command' itcss update
      .blue data-action='line' data-delay='8000' update source/assets/stylesheets/application.sass

    h3.section__title Inuitcss
    p.section__paragraph Download and import inuitcss modules should not be that hard. That’s why we decided to add inuit commands to itcsscli. They use your package manager to download the external modules and import it all into your sass base file.
    .showyourterms.js-syt
      .command data-action='command' itcss inuit new objects.buttons
      .green data-action='line' using bower to install inuit objects.buttons dependency...
      .grey data-action='line' data-delay='0' inuit-buttons#0.4.2 bower_components/inuit-buttons
      .grey data-action='line' data-delay='0' ├── inuit-defaults#0.2.3
      .grey data-action='line' └── inuit-functions#0.2.0
      .blue data-action='line' data-delay='0' update itcss.yml. [added objects.buttons]
      .blue data-action='line' data-delay='8000' update source/assets/stylesheets/application.css.sass

    h3.section__title There's more!
    p.section__paragraph itcsscli provides you a fully automated documentation so you can take a deep overview of your work without opening thousands of files.
    .text-align-center
      = link_to 'See more about itcssdoc', 'itcssdoc', class: 'btn btn--large'
